services:
  mysql:
    image: mysql:8.0
    container_name: mysql8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-qingverse}
      TZ: Asia/Shanghai
      LANG: C.UTF-8
    command: ["mysqld","--character-set-server=utf8mb4","--collation-server=utf8mb4_0900_ai_ci"]
    volumes:
      - mysql-data:/var/lib/mysql
      - ../apps/api/db/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    networks: [app]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    image: ${DH_USER}/qingverse-api:${TAG}
    container_name: qv-api
    restart: unless-stopped
    environment:
      # 用非 root 账号
      MYSQL_DSN: ${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(mysql:3306)/qingverse?parseTime=true&charset=utf8mb4
      CORS_ORIGIN: ${CORS_ORIGIN}
      ADDR: 0.0.0.0:9000
    depends_on:
      mysql:
        condition: service_healthy
    networks: [app]

  web:
    image: ${DH_USER}/qingverse-web:${TAG}
    container_name: qv-web
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # 运行时变量对 Next 客户端无效（客户端是构建时注入），仅留给服务端使用
      NEXT_PUBLIC_API_BASE_URL: ${PUBLIC_API_BASE_URL}
    networks: [app]
    ports:
      - "3000:3000"
    # 挂载内容目录（文章一改即可生效）
    volumes:
      - ../content:/app/apps/web/content:ro

  caddy:
    image: caddy:2
    container_name: qv-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data
      - caddy-config:/config
    depends_on: [web, api]
    networks: [app]

volumes:
  mysql-data:
  caddy-data:
  caddy-config:

networks:
  app:
    driver: bridge
